<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
	<SourceRevisionId>build$([System.DateTime]::UtcNow.ToString("yyyy-MM-ddTHH:mm:ss:fffZ"))</SourceRevisionId>
  </PropertyGroup>

	<!--
      1. Install npm packages
      "Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild skips the target.
      The first time the task is executed. Then, it only runs when you change the package.json file.
      Documentation: https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
   -->
	<Target Name="NpmInstall" Inputs="package.json" Outputs="node_modules/.install-stamp">
		<!--
        Use npm install or npm ci depending on RestorePackagesWithLockFile value.
        Uncomment the following lines if you want to use this feature:
        <PropertyGroup>
          <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
        </PropertyGroup>
		-->
		<Exec Command="npm ci" Condition="$(RestorePackagesWithLockFile) == 'true'" />
		<Exec Command="npm install" Condition="$(RestorePackagesWithLockFile) != 'true'" />

		<!-- Write the stamp file, so incremental builds work -->
		<Touch Files="node_modules/.install-stamp" AlwaysCreate="true" />
	</Target>

	<!--
      2. Run npm run build before building the .NET project.
      MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
   -->
	<Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
		<Exec Command="npm run" />
	</Target>
	<ItemGroup>
	  <None Remove="wwwroot\resources\standard-module-template.docx" />
	</ItemGroup>

	<ItemGroup>
    <PackageReference Include="BuildBundlerMinifier" Version="3.2.449" />
    <PackageReference Include="Julmar.MSLearnRepos" Version="2.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="6.0.7" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
  </ItemGroup>

	<ItemGroup>
	  <Content Update="wwwroot\resources\standard-module-template.docx">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </Content>
	</ItemGroup>

</Project>
